# üêª‚Äç‚ùÑÔ∏èüîÆ Noelware's Helm Charts: Curated catalog of Noelware's Helm charts.
# Copyright (c) 2022-2024 Noelware, LLC. <team@noelware.org>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

## @section Global Parameters
## @descriptionStart
## Contains any global parameters that will affected all objects in the VROOM! Helm chart.
## @descriptionEnd
##
## @param global.replicas Amount of replicas to use
## @param global.resources Resource list to apply to all containers.
## @param global.fullNameOverride String to fully override the Helm installation name for all objects
## @param global.nameOverride String to override the Helm installation name for all objects, will be in conjunction with a prefix of `<install-name>-`
## @param global.clusterDomain Domain host that maps to the cluster
## @param global.nodeSelector Selector labels to apply to contraint the pods to specific nodes. Read more in the [Kubernetes documentation](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
## @param global.tolerations List of all taints/tolerations to apply in conjunction with `global.affinity`. Read more in the [Kubernetes documentation](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration)
## @param global.affinity Map of all the affinity to apply to the spawned Pods. Read more in the [Kubernetes documentation](https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes-using-node-affinity/).
## @param global.annotations Map of annotations to append to on all objects that this Helm chart creates.
## @param global.extraEnvVars List of extra environment variables to append to all init/sidecar containers and normal containers.
## @param global.initContainers List of init containers to create.
## @param global.podSecurityContext Security context for all spawned Pods. Read more in the [Kubernetes documentation](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
## @param global.containerSecurityContext Security context for all init, sidecar, and normal containers. Read more in the [Kubernetes documentation](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
## @param global.dnsPolicy DNS policy for the pod.
## @param global.dnsConfig Configures the [DNS configuration](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-dns-config) for the pod.
global:
  replicas: 1
  fullNameOverride: ""
  nameOverride: ""
  clusterDomain: cluster.local
  nodeSelector: {}
  tolerations: []
  affinity: {}
  annotations: {}
  extraEnvVars: []
  initContainers: []
  podSecurityContext: {}
  containerSecurityContext: {}
  dnsPolicy: ""
  dnsConfig: {}
  resources: {}
    ## Example:
    ##  limits:
    ##    memory: 2Gi
    ##    cpu: 1500m
    ##  requests:
    ##    memory: 512Mi
    ##    cpu: 150m

## @section Docker Image Parameters
## @descriptionStart
## Parameters to modify the Docker image that is ran.
## @descriptionEnd
##
## @param image.pullPolicy [string] [Pull policy](https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy) when pulling the image.
## @param image.registry Registry URL to point to. For Docker Hub, use an empty string.
## @param image.image Image name.
## @param image.tag The tag of the image. Keep this as a empty string if you wish to use the default app's version.
## @param image.digest Digest in the form of `<alg>:<hex>`, this will replace the `image.tag` property if this is not empty.
image:
  pullPolicy: IfNotPresent
  registry: "" # keep empty to use docker hub
  image: getsentry/symbolicator
  tag: "" # keep empty for the app version
  digest: ""

## @section Service Account Parameters
## @param serviceAccount.create Whether or not if the service account should be created for this Helm installation.
## @param serviceAccount.annotations Any additional annotations to append to this ServiceAccount
## @param serviceAccount.name The name of the service account, this will be the Helm installation name if this is empty.
## @param serviceAccount.automountServiceAccountToken whether if the service account token is mounted onto the containers
serviceAccount:
  create: true
  annotations: {}
  name: ""
  automountServiceAccountToken: true

## @section Deployment Parameters
## @skip deployment.config
## @param deployment.existingConfigMap Name to a [`ConfigMap`](https://kubernetes.io/docs/concepts/configuration/configmap/) that is used for Symbolicator's configuration file. The `symbolicator.yml` key must be available.
## @param deployment.strategy [object] [Deployment strategy](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy) when creating the deployment.
## @param deployment.startupProbe.enabled whether or not to enable probing at startup.
## @param deployment.startupProbe.initialDelaySeconds Delay in seconds on when to probe.
## @param deployment.startupProbe.timeoutSeconds How long to wait for the probe to succeed.
## @param deployment.startupProbe.periodSeconds How often to perform probing (in seconds)
## @param deployment.startupProbe.successThreshold Minimum consecutive successes for the probe to considered successful.
## @param deployment.startupProbe.failureThreshold Minimum consecutive failures for the probe to considered successful.
## @param deployment.readinessProbe.enabled whether or not to enable the readiness probing
## @param deployment.readinessProbe.initialDelaySeconds Delay in seconds on when to probe.
## @param deployment.readinessProbe.timeoutSeconds How long to wait for the probe to succeed.
## @param deployment.readinessProbe.periodSeconds How often to perform probing (in seconds)
## @param deployment.readinessProbe.successThreshold Minimum consecutive successes for the probe to considered successful.
## @param deployment.readinessProbe.failureThreshold Minimum consecutive failures for the probe to considered successful.
## @param deployment.livenessProbe.enabled whether or not to enable the liveness probing
## @param deployment.livenessProbe.initialDelaySeconds Delay in seconds on when to probe.
## @param deployment.livenessProbe.timeoutSeconds How long to wait for the probe to succeed.
## @param deployment.livenessProbe.periodSeconds How often to perform probing (in seconds)
## @param deployment.livenessProbe.successThreshold Minimum consecutive successes for the probe to considered successful.
## @param deployment.livenessProbe.failureThreshold Minimum consecutive failures for the probe to considered successful.
deployment:
  existingConfigMap: ""
  config: |-
    # ref: https://getsentry.github.io/symbolicator/#configuration
    {{- if .Values.persistence.enabled }}
    cache_dir: {{ .Values.persistence.path | quote }}
    {{- else }}
    # It is recommended that persistence is enabled in production
    cache_dir: "/tmp/symbolicator"
    {{- end }}
    bind: "0.0.0.0:3021"
    logging:
      level: info
      format: pretty
      enable_backtraces: true

  startupProbe:
    enabled: true
    initialDelaySeconds: 15
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 5
  readinessProbe:
    enabled: true
    initialDelaySeconds: 15
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 5
  livenessProbe:
    enabled: true
    initialDelaySeconds: 15
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 5
  strategy: {}
  # type: RollingUpdate
  # rollingUpdate:
  #   maxSurge: 1
  #   maxUnavailable: 0

## @section Pod Disruption Budget
## @param podDisruptionBudget.enabled Enables the use of a `PodDisruptionBudget`. Read more in the [Kubernetes documentation](https://kubernetes.io/docs/concepts/workloads/pods/disruptions)
## @param podDisruptionBudget.minAvailable Minimum number (or percentage) of pods that should be remained scheduled
## @param podDisruptionBudget.maxUnavailable Maximum number (or percentage) of pods that maybe made unavaliable.
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  maxUnavailable: null

## @section Service Parameters
## @descriptionStart
## Parameters to configure a [Kubernetes service](https://kubernetes.io/docs/concepts/services-networking/service/) to allow connectivity internally
## or externally.
## @descriptionEnd
##
## @param service.port Port number to listen to.
## @param service.clusterIP IP to use for the cluster IP if `type` is `ClusterIP`.
## @param service.enabled Whether or not if a Kubernetes service should be enabled.
## @param service.type The [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types) to use.
## @param service.selectorLabels Selector to apply this Kubernetes service to
## @param service.externalName The external name if `service.type` == `"ExternalName"`
## @param service.loadBalancer Load balancer configuration if `service.type` == `"LoadBalanacer"`
## @param service.nodePort Node port to expose, refer to the [Kubernetes documentation](https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport) for more information.
service:
  enabled: true
  port: 3021
  type: ClusterIP
  selectorLabels: {}
  clusterIP: ""
  externalName: null
  loadBalancer: {}
  nodePort: ""

## @section Persistence
## @descriptionStart
##
## @descriptionEnd
## @param persistence.enabled whether to enable a PVC to cache symbolications
## @param persistence.path Symbolicator's path to where it is cached.
## @param persistence.existingClaim An existing [`PersistentVolumeClaim`](https://kubernetes.io/docs/concepts/storage/persistent-volumes) that was created beforehand. If you use `helm upgrade` and this is not set, it'll not provision a new PVC.
## @param persistence.storageClass The [`storageClass`](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class-1) field when creating the PVC.
## @param persistence.selector Label selector to further filter the PVC set, read in the [Kubernetes documentation](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#selector) for more information.
## @param persistence.size The size of the PVC, in mose cases, this shouldn't be higher than 1GiB... unless you have many images.
## @param persistence.accessModes List of [access modes](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes)
## @param persistence.annotations Mapping of the annotations that will be merged with existing annotations for the PVC creation
persistence:
  enabled: true
  existingClaim: ""
  path: "/data"
  storageClass: ""
  selector: {}
  annotations: {}
  size: 1Gi
  accessModes:
    - ReadWriteOnce
