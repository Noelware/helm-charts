{{/*
~ üêª‚Äç‚ùÑÔ∏èüîÆ Noelware's Helm Charts: Curated catalog of Noelware's Helm charts.
~ Copyright (c) 2022-2024 Noelware, LLC. <team@noelware.org>
~
~ Permission is hereby granted, free of charge, to any person obtaining a copy
~ of this software and associated documentation files (the "Software"), to deal
~ in the Software without restriction, including without limitation the rights
~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
~ copies of the Software, and to permit persons to whom the Software is
~ furnished to do so, subject to the following conditions:
~
~ The above copyright notice and this permission notice shall be included in all
~ copies or substantial portions of the Software.
~
~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
~ SOFTWARE.
*/}}

{{- if not .Values.config.existingMap }}
{{/* storage validation */}}
{{ $storageKinds := list "Filesystem" "S3" "Azure" }}
{{- if not (has .Values.storage.kind $storageKinds) }}
    {{- fail (printf "Unknown storage driver: [`%s`], wanted: [%s]" .Values.storage.kind (join ", " $storageKinds)) }}
{{- end }}

apiVersion: v1
kind: ConfigMap
metadata:
    name: {{ printf "%s-data" (include "hazel.fullname" .) }}
    namespace: {{ .Release.Namespace }}
    annotations:
        {{- include "hazel.annotations" (dict "context" .) | nindent 8 }}
    labels:
        {{- include "hazel.labels" . | nindent 8 }}
data:
    hazel.hcl: |
        {{- include "common.tplvalues.render" (dict "value" .Values.deployment.config "context" $) | nindent 8 }}
{{- end }}
