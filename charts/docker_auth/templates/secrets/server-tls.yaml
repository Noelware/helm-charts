{{/*
~ üêª‚Äç‚ùÑÔ∏èüîÆ Noelware's Helm Charts: Curated catalog of Noelware's Helm charts.
~ Copyright (c) 2022-2024 Noelware, LLC. <team@noelware.org>
~
~ Permission is hereby granted, free of charge, to any person obtaining a copy
~ of this software and associated documentation files (the "Software"), to deal
~ in the Software without restriction, including without limitation the rights
~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
~ copies of the Software, and to permit persons to whom the Software is
~ furnished to do so, subject to the following conditions:
~
~ The above copyright notice and this permission notice shall be included in all
~ copies or substantial portions of the Software.
~
~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
~ SOFTWARE.
*/}}

{{- $name := printf "%s-tls" .Values.ingress.host }}
{{- if and .Values.ingress.tls .Values.ingress.selfSigned }}
{{- $ca := genCA "docker-auth-registry-ca" 365 }}
{{- $cert := genSignedCert .Values.ingress.host nil (list .Values.ingress.host) 365 $ca }}
apiVersion: v1
kind: Secret
metadata:
    name: {{ $name }}
    namespace: {{ .Release.Namespace }}
    annotations:
        {{- include "registry.auth.annotations" (dict "context" .) | nindent 8 }}
    labels:
        {{- include "registry.auth.labels" . | nindent 8 }}
type: kubernetes.io/tls
data:
    tls.crt: {{ include "common.secrets.lookup" (dict "secret" $name "key" "tls.crt" "defaultValue" $cert.Cert "context" $) }}
    tls.key: {{ include "common.secrets.lookup" (dict "secret" $name "key" "tls.key" "defaultValue" $cert.Key "context" $) }}
    ca.crt: {{ include "common.secrets.lookup" (dict "secret" $name "key" "ca.crt" "defaultValue" $ca.Cert "context" $) }}
{{- end -}}
